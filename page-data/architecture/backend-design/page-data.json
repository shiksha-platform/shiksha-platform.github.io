{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/architecture/backend-design",
    "result": {"data":{"site":{"siteMetadata":{"title":"Shiksha Platform","docsLocation":"https://github.com/shiksha-platform/shiksha-platform.github.io/tree/gatsby-source/content"}},"mdx":{"fields":{"id":"e5c56cf0-73e6-582a-b179-85325d1e8a46","title":"Backend Design","slug":"/architecture/backend-design"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Backend Design\",\n  \"metaTitle\": \"Shiksha Backend Design\",\n  \"metaDescription\": \"Shiksha Backend Design\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The Shiksha backend is a suite of REST APIs implemented using nodejs. The backend APIs conform to the schemas defined as part of the Shiksha Ecosystem. While the request and response of the APIs is pre-defined, deployers can use \\\"adapters\\\" to connect these APIs to their existing data sources which may be either databases or another application that provides APIs.\"), mdx(\"p\", null, \"The image below demonstrates how an adopter may write an attendance adapter.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/7eac66b0b91e00762ed300fa200be1ae/shiksha-backend-adapter.svg\",\n    \"alt\": \"Shiksha Backend\"\n  })), mdx(\"h2\", null, \"Authentication\"), mdx(\"p\", null, \"The Shiksha backend will not provide any authentication. Instead, deployers implement an OpenID compliant authentication service, which will be used by the frontend. Once the user is logged into the frontend, the token received from the authentication service is passed to all the middleware API requests. The middleware passes on the token to the adapter, which can further pass it on to the backend for validation.\"), mdx(\"h2\", null, \"Database\"), mdx(\"p\", null, \"Shiksha does not have any database of its own for the APIs. Instead, the Shiksha APIs are just stubs, and deployers are expected to implement adapters that will fetch data from the deployer's backend and transform it to the data models defined in Shiksha.\"), mdx(\"h2\", null, \"Adapter Design\"), mdx(\"p\", null, \"The below is the folder structure of the backend app\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"/apis\\n/apis/studentApis.ts\\n/apis/teacherApis.ts\\n/apis/attendanceApis.ts\\n..\\n..\\n\\n/interfaces\\n/interfaces/entities/IStudent.ts\\n/interfaces/entities/ITeacher.ts\\n/interfaces/entities/IAttendance.ts\\n/interfaces/adapter/IStudentAdapter.ts\\n/interfaces/adapter/ITeacherAdapter.ts\\n/interfaces/adapter/IAttendanceAdapter.ts\\n..\\n..\\n\\n/exceptions\\n/exceptions/ValidationException.ts\\n/exceptions/GeneralException.ts\\n..\\n..\\n\\n/adapters/\\n/adapters/default\\n/adapters/default/studentAdapter.ts\\n/adapters/default/teacherAdapter.ts\\n/adapters/default/attendanceAdapter.ts\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#authentication","title":"Authentication"},{"url":"#database","title":"Database"},{"url":"#adapter-design","title":"Adapter Design"}]},"parent":{"relativePath":"architecture/backend-design.md"},"frontmatter":{"metaTitle":"Shiksha Backend Design","metaDescription":"Shiksha Backend Design"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/deployment","title":"Deployment"}}},{"node":{"fields":{"slug":"/architecture","title":"Shiksha Architecture"}}},{"node":{"fields":{"slug":"/frontend-design","title":"Designing Frontend"}}},{"node":{"fields":{"slug":"/frontend-develop","title":"Developing Frontend"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/architecture/adapter-interface","title":"Adapter Interfaces"}}},{"node":{"fields":{"slug":"/architecture/backend-design","title":"Backend Design"}}},{"node":{"fields":{"slug":"/architecture/folder-structure","title":"Middleware Folder Structure"}}},{"node":{"fields":{"slug":"/deployment/deployment-backend","title":"Deploying the Backend"}}},{"node":{"fields":{"slug":"/deployment/deployment-prerequisites","title":"Deployment Pre-requisites"}}},{"node":{"fields":{"slug":"/frontend-develop/00-introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/frontend-develop/01-getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/frontend-develop/02-folder-structure","title":"Folder Structure"}}},{"node":{"fields":{"slug":"/frontend-develop/03-feature-module","title":"Feature Module"}}},{"node":{"fields":{"slug":"/frontend-develop/04-applcation","title":"Host Application"}}},{"node":{"fields":{"slug":"/frontend-develop/05-module-communication","title":"Inter Module communication"}}},{"node":{"fields":{"slug":"/frontend-develop/99-todo","title":"TODO"}}}]}},"pageContext":{"id":"e5c56cf0-73e6-582a-b179-85325d1e8a46"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}