{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/architecture/adapter-interface",
    "result": {"data":{"site":{"siteMetadata":{"title":"Shiksha Platform","docsLocation":"https://github.com/shiksha-platform/shiksha-platform.github.io/tree/gatsby-source/content"}},"mdx":{"fields":{"id":"e4be0c34-d356-5002-b56b-da71e541db7e","title":"Adapter Interfaces","slug":"/architecture/adapter-interface"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Adapter Interfaces\",\n  \"metaTitle\": \"Adapter Interfaces\",\n  \"metaDescription\": \"Adapter Interfaces\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The adapter interfaces allow any deployer to implement logic to connect to the backend of their choice. Adapter interfaces Each adapter implements methods that correspond to the APIs made available by the middleware.\"), mdx(\"h3\", null, \"Below is an example of the Attendance Adapter Interface\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"\\ninterface IAttendance {\\n    attendanceId: string;\\n    schoolId: string;\\n    userId: string;\\n    groupId: string;\\n    topicId: string;\\n    eventId: string;\\n    date: datetime;\\n    attendance: string;\\n    remark: string;\\n    approved: string;\\n    approvedBy: string;\\n}\\n\\n\\ninterface IAttendanceAdapter {\\n    create(IAttendance): IAttendance;\\n    read(id): IAttendance;\\n    list(filters): IAttendance[];\\n}\\n\")), mdx(\"p\", null, \"The deployer will implement the interface, and write code within to \"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Fetch data from their data source (could API, DB or any other source)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Transform the data to the specific interface's properties, and return the transformed data\")), mdx(\"h3\", null, \"Below is an example implementation of the above interface\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"class SBRCAttendance implements IAttendanceAdapter { \\n\\n    constructor(TBD) { \\n    }\\n\\n    create (IAttendance) { \\n      // API call to create attendance record in deployer DB\\n      // Transform created record to IAttendance\\n      // return IAttendance\\n    }\\n\\n    read(id) { \\n      // API call to fetch attendance record from deployer DB\\n      // Transform record data to IAttendance\\n      // return IAttendance\\n    }\\n\\n    list (filters) { \\n      // API call to fetch list of attendance records from deployer DB\\n      // Transform created record to array of IAttendance\\n      // return IAttendance[]\\n    }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#below-is-an-example-of-the-attendance-adapter-interface","title":"Below is an example of the Attendance Adapter Interface"},{"url":"#below-is-an-example-implementation-of-the-above-interface","title":"Below is an example implementation of the above interface"}]},"parent":{"relativePath":"architecture/adapter-interface.md"},"frontmatter":{"metaTitle":"Adapter Interfaces","metaDescription":"Adapter Interfaces"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/deployment","title":"Deployment"}}},{"node":{"fields":{"slug":"/architecture","title":"Shiksha Architecture"}}},{"node":{"fields":{"slug":"/frontend-design","title":"Designing Frontend"}}},{"node":{"fields":{"slug":"/frontend-develop","title":"Developing Frontend"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/architecture/adapter-interface","title":"Adapter Interfaces"}}},{"node":{"fields":{"slug":"/architecture/backend-design","title":"Backend Design"}}},{"node":{"fields":{"slug":"/architecture/folder-structure","title":"Middleware Folder Structure"}}},{"node":{"fields":{"slug":"/deployment/deployment-backend","title":"Deploying the Backend"}}},{"node":{"fields":{"slug":"/deployment/deployment-prerequisites","title":"Deployment Pre-requisites"}}},{"node":{"fields":{"slug":"/frontend-develop/00-introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/frontend-develop/01-getting-started","title":"Getting Started"}}},{"node":{"fields":{"slug":"/frontend-develop/02-folder-structure","title":"Folder Structure"}}},{"node":{"fields":{"slug":"/frontend-develop/03-feature-module","title":"Feature Module"}}},{"node":{"fields":{"slug":"/frontend-develop/04-applcation","title":"Host Application"}}},{"node":{"fields":{"slug":"/frontend-develop/05-module-communication","title":"Inter Module communication"}}},{"node":{"fields":{"slug":"/frontend-develop/99-todo","title":"TODO"}}}]}},"pageContext":{"id":"e4be0c34-d356-5002-b56b-da71e541db7e"}},
    "staticQueryHashes": ["2619113677","3706406642","417421954"]}