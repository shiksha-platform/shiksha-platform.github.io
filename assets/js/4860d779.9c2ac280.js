"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[2920],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return d}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),m=s(t),d=r,v=m["".concat(c,".").concat(d)]||m[d]||p[d]||a;return t?o.createElement(v,i(i({ref:n},l),{},{components:t})):o.createElement(v,i({ref:n},l))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=m;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u.mdxType="string"==typeof e?e:r,i[1]=u;for(var s=2;s<a;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3488:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return p}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),i=["components"],u={title:"Inter Module communication"},c=void 0,s={unversionedId:"Developer/Frontend/module-communication",id:"Developer/Frontend/module-communication",title:"Inter Module communication",description:"As a developer, i am developing a module that wants to communicate with other modules. This describes uses for event bus messaging between modules",source:"@site/docs/Developer/Frontend/05-module-communication.md",sourceDirName:"Developer/Frontend",slug:"/Developer/Frontend/module-communication",permalink:"/docs/Developer/Frontend/module-communication",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Developer/Frontend/05-module-communication.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{title:"Inter Module communication"},sidebar:"tutorialSidebar",previous:{title:"Folder Structure",permalink:"/docs/Developer/Frontend/folder-structure"},next:{title:"I18n - Using Locale Translations ",permalink:"/docs/Developer/Frontend/i18n"}},l={},p=[{value:"EventBus",id:"eventbus",level:2},{value:"Publish an Event",id:"publish-an-event",level:2},{value:"Subscribes to an Event",id:"subscribes-to-an-event",level:2}],m={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"As a developer, i am developing a module that wants to communicate with other modules. This describes uses for event bus messaging between modules"),(0,a.kt)("h2",{id:"eventbus"},"EventBus"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"@shiksha/common-lib")," provides ",(0,a.kt)("inlineCode",{parentName:"p"},"EventBus")," that is used to communicate and event that happened. Any other module can subscribes to the event channel and act on event that has happened."),(0,a.kt)("h2",{id:"publish-an-event"},"Publish an Event"),(0,a.kt)("p",null,"\\"," A component A in a module M1 publishes event E"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\\\\ -- componentA.js\nimport {eventBus} from \'@shiksha/common-lib\';\n...\nlet eventData = ...\neventBus.publish(\n              "[channel]" , \n              {\n                eventType:"[eventtype]", \n                data: eventData \n              });\n...\n\n')),(0,a.kt)("h2",{id:"subscribes-to-an-event"},"Subscribes to an Event"),(0,a.kt)("p",null,"\\"," A component B in module M2 wants to act on an event that is published to a channel "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'\\\\ -- componentB.js\nimport {eventBus} from \'@shiksha/common-lib\';\n...\n\\\\ grab subscription \n\\\\ so that it can be released after component no more wants to listen to the events in the channel\nconst subscription = eventBus.subscribe("[channel]", (data, envelop)=>{\n      console.log(envelop);\n      if(data.eventType="[eventtype]"){\n        // act on event wiith data.\n        ...\n      }\n    });\n...\n\n// unscubscribe when componentB is destroyed/removed\neventBus.unsubscribe(subscription);\n')))}d.isMDXComponent=!0}}]);